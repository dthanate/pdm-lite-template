[project]
name = "{{ cookiecutter.package_name }}"
dynamic = ["version"]
description = "{{ cookiecutter.project_desc }}"
authors = [
    { name = "{{ cookiecutter.author_name }}", email = "{{ cookiecutter.author_email }}" },
]
dependencies = [
    "dill>=0.3.8",
    "more-itertools>=10.2.0",
    "ujson>=5.9.0",
    "pyjson5>=1.6.6",
    "fsspec[git,http,https,sftp,ssh,libarchive]>=2024.2.0",
    "python-dateutil>=2.8.2",
]
requires-python = "{{ cookiecutter.python_version_range }}"
readme = "README.md"
license = { text = "{{ cookiecutter.license }}" }

[project.optional-dependencies]
cbinding = [
    "cython>=3.0.8",
    "pybind11>=2.11.1",
]
dataframe = [
    "pandas[performance,computation,parquet,fss,compression]>=2.2.0",
    "polars[pandas,numpy,pyarrow,fsspec]>=0.20.10",
    "clevercsv[full]>=0.8.2",
]
duckdb = [
    "duckdb>=0.10.0",
]
ml = [
    "scikit-learn>=1.4.1",
    "xgboost>=2.0.3",
]
numerical = [
    "numpy>=1.26.4",
    "numba>=0.59.0",
    "numexpr>=2.9.0",
    "bottleneck>=1.3.7",
    "jax[cpu]>=0.4.24",
    "mpmath[gmpy]>=1.3.0",
]
pydantic = [
    "pydantic[email]>=2.6.1",
    "pydantic-extra-types>=2.5.0",
]
sympy = [
    "sympy>=1.12",
]
all = [
    "{{ cookiecutter.package_name }}[cbinding,dataframe,duckdb,ml,numerical,pydantic,sympy]"
]

[build-system]
requires = ["pdm-backend"]
build-backend = "pdm.backend"

[tool.pdm]
distribution = true

[tool.pdm.version]
source = "file"
path = "src/{{ cookiecutter.package_name }}/_version.py"

[tool.pdm.resoution]
respect-source-order = true
allow-prereleases = true

[tool.pdm.dev-dependencies]
nvim = [
    "pynvim>=0.5.0",
]
test = [
    "pytest>=8.0.2",
    "pytest-xdist>=3.5.0",
    "pytest-randomly>=3.15.0",
    "pytest-cov>=4.1.0",
    "pytest-beartype>=0.0.2",
    "hypothesis[array_api,cli,codemods,dateutil,dpcontracts,lark,numpy,pytz]>=6.98.13",
]
dev = [
    "mypy>=1.8.0",
    "pylint>=3.1.0",
    "pyright>=1.1.351",
    "jedi-language-server>=0.41.3",
    "black>=24.2.0",
    "bandit>=1.7.7",
    "reorder-python-imports>=3.12.0",
    "flake8-pyproject>=1.2.3",
    "mypy-extensions>=1.0.0",
    "pysnooper>=1.2.0",
    "icecream>=2.1.3",
    "beartype>=0.17.2",
    "dpcontracts>=0.6.0",
    "coverage>=7.4.3",
    "pyproject-metadata>=0.7.1",
]
type = [
    "types-ujson>=5.9.0.0",
    "types-python-dateutil>=2.8.19.20240106",
    "types-pillow>=10.2.0.20240213",
]
repl = [
    "ipython>=8.22.1",
    "ptpython>=3.0.26",
]
jupyter = [
    "jupyterlab>=4.1.2",
    "ipykernel>=6.29.3",
    "ipywidgets>=8.1.2",
    "jupyterlab-code-formatter>=2.2.1",
    "jupyterlab-vim>=4.1.3",
    "jupyterlab-git>=0.50.0",
    "jupyterlab-execute-time>=3.1.2",
    "nbconvert[webpdf]>=7.16.1",
    "jupytext>=1.16.1",
]
plotting = [
    "matplotlib>=3.8.3",
    "seaborn>=0.13.2",
    "plotext>=5.2.8",
]

# [[tool.pdm.source]]
# name = "torchcpu"
# url = "https://download.pytorch.org/whl/cpu"
# verify_ssl = true

# [[tool.pdm.source]]
# name = "torchrocm"
# url = "https://download.pytorch.org/whl/rocm5.7"
# verify_ssl = true

#[[tool.pdm.source]]
#name = "pypi"
#url = "https://pypi.org/simple"
#verify_ssl = true

[tool.pylint]
jobs = 0
extension-pkg-allow-list = ["ujson", "pydantic"]
recursive = "yes"
suggestion-mode = "yes"
unsafe-load-any-extension = "yes"

[tool.pylint.FORMAT]
max-line-length = 128

[tool.pylint."MESSAGE CONTROL"]
disable = [
    "missing-function-docstring",
    "missing-module-docstring",
    "missing-class-docstring",
    "invalid-name",
    "too-few-public-methods",
    "line-too-long",
    "import-outside-toplevel",
    "wrong-import-position",
    "wrong-import-order",
    "ungrouped-imports",
    "too-many-arguments",
    "too-many-instance-attributes",
    "too-many-branches",
    "too-many-statements",
    "too-many-locals",
    "too-many-return-statements",
    "too-many-nested-blocks",
    "too-many-boolean-expressions",
]

[tool.black]
line-length = 128
target-version = ["{{ cookiecutter.black_python_target }}"]

[tool.mypy]
python_version = "{{ cookiecutter.mypy_python_target }}"
plugins = ["numpy.typing.mypy_plugin", "pydantic.mypy"]

follow_imports = "normal"
ignore_missing_imports = true
warn_redundant_casts = true
warn_return_any = true
warn_unused_configs = true
warn_unused_ignores = true
disallow_any_generics = true
check_untyped_defs = true
no_implicit_reexport = true
disallow_untyped_defs = false

[tool.pydantic-mypy]
init_forbid_extra = true
init_typed = true
warn_required_dynamic_aliases = true
warn_untyped_fields = true

[tool.pyright]
typeCheckingMode = "strict"
reportMissingModuleSource = "none"
reportMissingImports = "none"
reportMissingTypeStubs = "none"
reportMissingParameterType = "none"
reportUnknownArgumentType = "none"
reportUnknownVariableType = "none"
reportUnknownMemberType = "none"
reportUnknownParameterType = "none"
reportUnknownLambdaType = "none"
reportGeneralTypeIssues = "none"
reportUnusedExpression = "none"
reportConstantRedefinition = "none"
reportUntypedFunctionDecorator = "none"

[tool.flake8]
max_line_length = 128
show_source = true
ignore = ["E501", "W503"]

[tool.bandit]
exclude_dirs = ["tests"]
skips = ["B403", "B301", "B101", "B606"]
